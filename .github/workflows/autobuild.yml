name: AutoBuild
on:
  push:
    branches:
      - main
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: npm
      - name: Install dependencies
        run: npm ci
        working-directory: .
      - name: Build static website
        run: npm run build
        working-directory: .
        env:
          OUTPUT_DIR: .
      - name: Validate build output
        run: "

          \          if [ ! -d \".\" ]; then

          \            echo \"Error: Build output directory does not exist\"

          \            exit 1

          \          fi

          \         \ 

          \          if [ ! -f \"./index.html\" ]; then

          \            echo \"Error: index.html not found in build output\"

          \            exit 1

          \          fi

          \         \ 

          \          echo \"Build validation successful\"

          \        "
      - name: Print AWS credentials
        run: "

          \          echo \"AWS Access Key ID: ${{ secrets.AWS_ACCESS_KEY_ID
          }}\"

          \          echo \"AWS Secret Access Key: ${{
          secrets.AWS_SECRET_ACCESS_KEY }}\"\ 

          \          echo \"AWS Region: ${{ secrets.AWS_DEFAULT_REGION }}\"

          \          echo \"AWS Access Key ID: ${{ env.AWS_ACCESS_KEY_ID }}\"

          \          echo \"AWS Secret Access Key: ${{ env.AWS_SECRET_ACCESS_KEY
          }}\"\ 

          \          echo \"AWS Region: ${{ env.AWS_DEFAULT_REGION }}\"

          \          echo \"AWS Region: ${{ secrets }}\"

          \        "
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Upload to S3 with cache headers
        run: "

          \          # Upload HTML files with no caching

          \          aws s3 sync .
          s3://bucket-c8facd93-20241029162548546800000001
          \\n            --exclude \"*\" \\n            --include \"*.html\"
          \\n            --cache-control \"no-cache,no-store,must-revalidate\"
          \\n            --delete


          \          # Upload assets with long-term caching

          \          aws s3 sync .
          s3://bucket-c8facd93-20241029162548546800000001
          \\n            --exclude \"*.html\" \\n            --include \"*.js\"
          \\n            --include \"*.css\" \\n            --include \"*.png\"
          \\n            --include \"*.jpg\" \\n            --include \"*.jpeg\"
          \\n            --include \"*.gif\" \\n            --include \"*.svg\"
          \\n            --include \"*.woff\" \\n            --include
          \"*.woff2\" \\n            --cache-control
          \"public,max-age=31536000,immutable\" \\n            --delete


          \          # Upload remaining files with moderate caching

          \          aws s3 sync .
          s3://bucket-c8facd93-20241029162548546800000001
          \\n            --exclude \"*.html\" \\n            --exclude \"*.js\"
          \\n            --exclude \"*.css\" \\n            --exclude \"*.png\"
          \\n            --exclude \"*.jpg\" \\n            --exclude \"*.jpeg\"
          \\n            --exclude \"*.gif\" \\n            --exclude \"*.svg\"
          \\n            --exclude \"*.woff\" \\n            --exclude
          \"*.woff2\" \\n            --cache-control \"public,max-age=3600\"
          \\n            --delete

          \        "
      - name: Invalidate CloudFront cache
        run: "

          \          if [ -n \"$CLOUDFRONT_DISTRIBUTION_ID\" ]; then

          \            aws cloudfront create-invalidation
          \\n              --distribution-id $CLOUDFRONT_DISTRIBUTION_ID
          \\n              --paths \"/*\"

          \            echo \"CloudFront cache invalidation initiated\"

          \          else

          \            echo \"No CloudFront distribution ID provided, skipping
          cache invalidation\"

          \          fi

          \        "
        env:
          CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
